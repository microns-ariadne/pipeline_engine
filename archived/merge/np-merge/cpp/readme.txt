The combine.cpp uses DisjoinSet data structure to combine merge files
from different pairs of blocks, which were generated by merge_pair.py script.

-----------------------------
Hard coded parameters (see util.h for modifying and viewing)

DIMS            : Dimensions of one SEGMENTATION block [used for relabeling]
MAX_LABEL       : Largest label in block segmentation [sued for relabeling]
                  If it is large (100000) out labels will get larger than 16K = 256 ^ 3.
                  In that case compressing of labels is needed when converting it to png.
TEMPLATE FNAMES : Template names of files to be read or generated

-----------------------------
Input (all coordinates and directions correspond to the DATA_DIR blocks and merge_pair.py file):
    --work-dir    : A directory where all temporary and resulting files will be stored.
                    This is the same directory where merge_pair.py executions produced results.
    --end-block   : A triplet, denoting the last block to be merged.
                    The coordinates are not inclusive.
    --block-count : The number of blocks in each direction.

Optional Arguments:
    --start-block          : The first block to be merged (default 0, 0, 0).
    --heuristic-thresholds : The merge_pair.py produces a list of pairs of segments
                             that can be merged based on heuristic properties.
                             This parameter is a triple, one number for each direction, that
                             sets the threshold. Default: DISABLED THRESHOLD by putting large numbers.
    --change-labels        : Apply relabeling of labels. IT IS SLOW! [default: not set]

-------------------------------
Product:
    labels_map.txt : A list of quadruples (b1, l1, b2, l2) meaning that
                     label l1 from block b1, has to be changed to that of block b2 and label l2.

    out_segmentation_Z_Y_X.h5 : If --change-labels is set, relabeled .h5 file.

